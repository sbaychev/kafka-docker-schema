# Logging
logging.level.co.tide=DEBUG

#=======================================================================================================================
# Kafka
#=======================================================================================================================
spring.main.allow-bean-definition-overriding=true

spring.kafka.topic-name=event.t
#spring.kafka.messages-per-request=10
spring.kafka.bootstrap-servers=${spring.embedded.kafka.brokers}
spring.kafka.properties.schema.registry.url=http://localhost:8081
spring.kafka.properties.specific.avro.reader=true

# Consumer Properties
spring.kafka.consumer.group-id=in-test-group
spring.kafka.consumer.client-id=in-test-consumer
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.properties-key-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties-value-deserializer=io.confluent.kafka.serializers.KafkaAvroDeserializer
spring.kafka.consumer.properties-specific-avro-reader=true
spring.kafka.consumer.properties-enable-auto-commit=true
spring.kafka.consumer.properties-auto-commit-interval-ms=500
spring.kafka.consumer.properties-poll-timeout=1000
#spring.kafka.consumer.useNativeEncoding=true
spring.kafka.input.content-type=application/*+avro
spring.kafka.input.concurrency=3

# Producer Properties
spring.kafka.producer.properties-key-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.properties-value-serializer=io.confluent.kafka.serializers.KafkaAvroSerializer
spring.kafka.producer.properties-acks=all
spring.kafka.producer.properties-retries=1
spring.kafka.output.content-type=application/*+avro
#spring.kafka.producer.useNativeEncoding=true